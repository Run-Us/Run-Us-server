plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id "de.undercouch.download" version "5.3.0"
}

group = 'com.run-us'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.8.2'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.2'
	implementation 'org.hibernate.orm:hibernate-spatial:6.2.2.Final'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	implementation 'com.auth0:java-jwt:4.3.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-core'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.0'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.github.codemonstur:embedded-redis:1.4.2'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation "com.epages:restdocs-api-spec:0.19.2"
	testImplementation "com.epages:restdocs-api-spec-mockmvc:0.19.2"
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

task downloadNewrelic(type: Download) {
	mkdir 'newrelic'
	src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
	dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
	from zipTree(file('newrelic/newrelic-java.zip'))
	into rootDir
}
